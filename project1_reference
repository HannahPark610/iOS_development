#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
typedef struct login_info 
{ 
   char user[20]; 
   char password[20]; 
} LOGIN_INFO; 
typedef struct save_info 
{ 
   char user[20]; 
   char password[20]; 
} SAVE_INFO; 
int main() 
{ 
   FILE *fp = NULL;
   LOGIN_INFO *info = { 0 }; 
   SAVE_INFO *sinfo = { 0 }; 
   LOGIN_INFO search; 
   int usercnt; 
   int inputcnt; 
   int i; 
   info = (LOGIN_INFO *)malloc(sizeof(LOGIN_INFO)*usercnt); // dynamic memory allocated 
   for (i = 0; i < usercnt; i++) 
   { 
      printf("%Enter the Username, Password\n", i + 1); 
      scanf_s("%s", &info[i].user, 20); 
      scanf_s("%s", &info[i].password, 20); 
   } 
   fp = fopen("\\Users\\박현영\\Desktop\\project1\\Accounts.txt", "w"); // storage in .txt
   fprintf(fp, "# of users: %d\n",usercnt); 
   fprintf(fp, "ID\tPASSWD\n"); 
   for (i = 0; i < usercnt; i++) 
   { 
      fprintf(fp, "%s\t%s\n", info[i].user, info[i].password); 
   } 
   fclose(fp); // closed .txt
   fp = fopen("\\Users\\박현영\\Desktop\\project1\\Accounts.txt", "rt"); // open the .txt what had storaged 
   if (fp == NULL) 
   { 
      printf("failed read file \n"); 
   } 
   fscanf(fp, "# of users: %d",&usercnt); 
   fscanf(fp, "ID\tPASSWD"); 
   sinfo = (SAVE_INFO *)malloc(sizeof(SAVE_INFO)*usercnt); // dynamic memory allocated
   for (i = 0; i < usercnt; i++) 
   { 
      fscanf(fp,"%s %s", sinfo[i].user, 20, sinfo[i].password, 20); // storage information is entered the structure
   } 
   fclose(fp); // closed .txt 
   printf("Enter the Username : "); 
   scanf_s("%s", &search.user,20); 
   printf("Enter the password : "); 
   scanf_s("%s", &search.password, 20); 
   for (i = 0; i < usercnt; i++) 
   { 
      if (strcmp(sinfo[i].user, search.user) == 0 && strcmp(sinfo[i].password, search.password) == 0) 
      { 
         printf("LOGIN OK!\n"); 
      } 
      else 
      { 
         printf("LOGIN FAILED!\n"); 
      } 
   } 
} 
