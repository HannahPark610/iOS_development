1-a.
void swap(char* a, char* b )  {
	char temp = *a;
	*a = *b;
	*b = temp;
}
1-b.
void swap(char* a, char* b )

1-c.
Void 

1-d.
int main(int argc, char *argv[])
{
	
	char a = 'c';
	char b = 'f';
	
	printf("%c\n", a);
	printf("%c\n", b);
	swap(&a, &b);

	printf("%c\n", a);
	printf("%c\n", b);
    return 0;
}



2-a.
float* addArrays(float*array1, float* array2, int size)  {
	float*result = malloc(size * sizeof(float));
	
	int i;
	for(i=0; i<size; i++)
	{
		result[i] = array1[i]+array2[i];
	}
	return result;

2-b.
float* addArrays(float*array1, float* array2, int size)

2-c.
Float

2-d.

int main(int argc, char *argv[])
{

float array1[]={1, 2, 3, 4, 5};
	float array2[]={11, 22, 33, 44, 55};
	float size = sizeof(array1)/sizeof(float);
	
	float* result;
	
	result = addArrays(array1, array2, size);
	int i;
	for(i=0; i<size; i++)
	{
		printf("%f\n", result[i]);
	}
	
    return 0;
}

-------------------------------------------------------------------------------------------------------
1 and 2 in xcode.


#include <stdio.h>
#include <stdlib.h>

// question 1
void swap(char* a, char* b);
// question 2
float* addArrays(float*, float*, int);

int main(int argc, char *argv[])
{
	char a = 'c';
	char b = 'd';
	swap(&a, &b);
	
	float array1[]={1, 2, 3, 4, 5};
	float array2[]={11, 22, 33, 44, 55};
	float size = sizeof(array1)/sizeof(float);
	
	float* result;
	
	result = addArrays(array1, array2, size);
	int i;
	for(i=0; i<size; i++)
	{
		printf("%f\n", result[i]);
	}
	
    return 0;
}

void swap(char* a, char* b) {
	char temp = *a;
	*a = *b;
	*b = temp;
}

float* addArrays(float*array1, float* array2, int size)  {
	float*result = malloc(size * sizeof(float));
	
	int i;
	for(i=0; i<size; i++)
	{
		result[i] = array1[i]+array2[i];
	}
	return result;
}
-----------------------------------------------------------------------------------------------------------
